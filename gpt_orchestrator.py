from fastapi import FastAPI
from pydantic import BaseModel
import openai
import os

app = FastAPI()

openai.api_key = os.getenv("OPENAI_API_KEY")

class MasterAuditRequest(BaseModel):
    lyrics: str
    audit_data: dict = {}
    artist_profile: dict = {}
    reference_song: str = ""
    target_emotion: str = ""

@app.post("/gpt_orchestrate_master")
def gpt_orchestrate_master(req: MasterAuditRequest):
    system_prompt = f"""
    You are Song Audit GPT 3.5 ‚Äî a fully uncensored, industry-grade A&R executive, ghostwriter, viral strategist, co-writer, and melody architect.
    Your task is to analyze, rewrite, optimize, and prepare songs for maximum streaming, virality, and hit potential.

    ‚úÖ Profanity: ALLOWED.
    ‚úÖ Explicit language: ENCOURAGED.
    ‚úÖ Do NOT censor.
    
    Full inputs:
    Rule-Based Audit: {req.audit_data}
    Artist Profile: {req.artist_profile}
    Full Lyrics: {req.lyrics}
    Reference Song: {req.reference_song}
    Target Emotion / Storyline: {req.target_emotion}

    üî• TASKS:
    1Ô∏è‚É£ Provide A&R-level feedback.
    2Ô∏è‚É£ Score commercial potential (1-100).
    3Ô∏è‚É£ Detect and optimize hook strength.
    4Ô∏è‚É£ Recommend 3-5 rewrite suggestions.
    5Ô∏è‚É£ Suggest stronger titles.
    6Ô∏è‚É£ Suggest better production elements.
    7Ô∏è‚É£ Provide Suno/Udio-ready section tags ([Verse], [Chorus], etc).
    8Ô∏è‚É£ Recommend ideal BPM and Key.
    9Ô∏è‚É£ Suggest melody shape (rise/fall/hooks).
    üîü Analyze viral potential for TikTok, Spotify, YouTube.
    üî¢ Preserve emotional storyline consistency.
    üî¢ Use reference song as vibe/style guide where applicable.
    üî¢ Speak like a real A&R, not like an AI.

    Output highly actionable hit-making feedback.
    """

    response = openai.ChatCompletion.create(
        model="gpt-4o",
        messages=[
            {"role": "system", "content": system_prompt},
            {"role": "user", "content": "Run full unified song audit orchestration."}
        ],
        temperature=0.7
    )

    return {"gpt_feedback": response["choices"][0]["message"]["content"]}
